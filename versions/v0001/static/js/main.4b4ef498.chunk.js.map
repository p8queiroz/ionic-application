{"version":3,"sources":["components/menu/Menu.js","components/footer/Footer.js","components/answer/Answer.js","components/question/Question.js","components/loader/Loader.js","components/questionFilter/select/Select.js","components/questionFilter/QuestionFilter.js","components/questionList/QuestionList.js","pages/Home.js","pages/Github.js","pages/About.js","routes/Routes.js","App.js","serviceWorker.js","index.js"],"names":["Menu","Fragment","className","id","href","onClick","event","preventDefault","document","getElementById","style","width","title","to","map","item","key","Footer","Answer","_answer","dangerouslySetInnerHTML","__html","Question","question","React","useState","isOpened","setIsOpened","description","answer","toggle","alert","Loader","Select","name","options","callbackfilter","onChange","target","value","localStorage","setItem","QuestionFilter","clear","setClear","useEffect","QuestionList","isLoading","setLoading","questions","setQuestions","fetch","method","mode","cache","headers","then","response","json","data","catch","error","console","log","technology","getItem","level","filter","Home","_questions","Github","About","Routes","exact","path","component","customHistory","createBrowserHistory","basename","App","siteInfo","setSiteInfo","history","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.4b4ef498.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Menu.css';\r\n\r\nconst Menu = () => {\r\n\r\n    const close = (event) => {\r\n        event.preventDefault();\r\n        document.getElementById(\"side-bar-nav\").style.width = \"0\";\r\n    }\r\n\r\n    const open = (event) => {\r\n        event.preventDefault();\r\n        document.getElementById(\"side-bar-nav\").style.width = \"10rem\";\r\n    }\r\n\r\n    const links = [\r\n        { title: \"Home\", to: \"/home\" },\r\n        { title: \"About\", to: \"/about\" },\r\n        { title: \"Favorites\", to: \"/about\" },\r\n        { title: \"Contact\", to: \"/about\" },\r\n        { title: \"Login\", to: \"/about\" },\r\n        { title: \"GitHub\", to: \"/github\" }\r\n    ];\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"side-nav-wrapper\">\r\n                <div>\r\n                    <div id=\"side-bar-nav\" className=\"sidenav\">\r\n                        <a href=\"/#\" className=\"closebtn\" onClick={close}>&times;</a>\r\n                        {links.map((item) => <Link key={`side-bar-nav-${item.title}`} to={item.to}>{item.title}</Link>)}\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <span onClick={open}>&#9776;</span>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default Menu;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"about\">\r\n                Wanna publish your question? email: phqs.phqs [at] gmail\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default Footer;","import React from 'react';\r\n\r\nconst Answer = ({ _answer }) => {\r\n\r\n    const answerhtml = () => {\r\n        return { __html: _answer };\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div dangerouslySetInnerHTML={answerhtml()}></div>\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default Answer;","import React from 'react';\r\nimport Answer from '../answer/Answer';\r\n\r\nconst Question = ({ question }) => {\r\n\r\n    const [isOpened, setIsOpened] = React.useState(false);\r\n    let { description, answer } = question;\r\n\r\n    const toggle = () => {\r\n        setIsOpened(isOpened => !isOpened);\r\n    }\r\n\r\n    const share = () => alert(\"share this question!\");\r\n\r\n    const descriptionhtml = () => {\r\n        return { __html: description };\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"card\">\r\n                <div className=\"content\">\r\n                    <div className={'question' + (isOpened ? ' active' : '')} onClick={toggle}>\r\n                        <div className=\"circle-container\">\r\n                            <div className=\"outer circle\">\r\n                                <div className=\"inner circle\">\r\n                                    <div className=\"question-mark\">?</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <p dangerouslySetInnerHTML={descriptionhtml()}></p>\r\n                    </div>\r\n                    <div className={'options' + (isOpened ? ' active' : '')}>\r\n                        <div className=\"answer-option\" onClick={toggle}>\r\n                            <div className=\"chat icon\"></div>\r\n                        </div>\r\n                        <div className=\"social\" onClick={share}>\r\n                            <div className=\"twitter\">\r\n                                <div className=\"retweet icon\"></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={'answer' + (isOpened ? ' active' : '')}>\r\n                        <Answer _answer={answer}></Answer>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default Question;","import React from 'react';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <React.Fragment><div className=\"lds-facebook\"><div></div><div></div><div></div></div></React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Loader;","import React from 'react';\r\n\r\nconst Select = ({ id, name, options, callbackfilter }) => {\r\n\r\n    const handleSelect = (event) => {\r\n        const { target: { id, value } } = event;\r\n        localStorage.setItem(id, value);\r\n        callbackfilter();\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div>\r\n                <span>{name}:</span>\r\n                <select id={id} onChange={handleSelect}>\r\n                    {\r\n                        options.map((item) => (<option key={`${id}-opt-${item}`} value={item} >{item} </option>))\r\n                    }\r\n                </select>\r\n            </div>\r\n        </React.Fragment >\r\n    );\r\n}\r\nexport default Select;","import React from 'react';\r\nimport Select from './select/Select';\r\n\r\nconst QuestionFilter = ({ callbackfilter }) => {\r\n\r\n    const [clear, setClear] = React.useState(false);\r\n\r\n    const clearfunction = () => {\r\n        localStorage.setItem('select-filter-first', '');\r\n        localStorage.setItem('select-filter-second', '');\r\n        callbackfilter(true);\r\n        setClear(true);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setClear(false);\r\n    }, [clear]);\r\n\r\n    let optionsFirst = [\"\", \"javascript\", \"react\", \".net\"];\r\n    let optionsSecond = [\"\", \"easy\", \"medium\", \"intermidiate\", \"hard\"];\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"filters\">\r\n                {!clear && <Select name=\"Technology\" id=\"select-filter-first\" options={optionsFirst} callbackfilter={callbackfilter} ></Select>}\r\n                {!clear && <Select name=\"Level\" id=\"select-filter-second\" options={optionsSecond} callbackfilter={callbackfilter}></Select>}\r\n                <div onClick={clearfunction}>\r\n                    <div className=\"trash icon\"></div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nexport default QuestionFilter;","import React from 'react';\r\nimport Question from '../question/Question';\r\nimport Loader from '../loader/Loader';\r\nimport QuestionFilter from '../questionFilter/QuestionFilter';\r\nimport './QuestionList.css';\r\n\r\n\r\nconst QuestionList = () => {\r\n\r\n    const [isLoading, setLoading] = React.useState(true);\r\n    const [questions, setQuestions] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        let init = {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            cache: 'default',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        fetch('http://quizzertech.com/system/wp-json/application-api/v1/om-question', init)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setQuestions(data);\r\n                setLoading(false);\r\n            })\r\n            .catch((error) => console.log(error))\r\n    }, []);\r\n\r\n    const filter = () => {\r\n        let technology = localStorage.getItem('select-filter-first');\r\n        let level = localStorage.getItem('select-filter-second');\r\n        setQuestions(questions.filter(item => (technology ? item.technology === technology : true)).filter(item => (level ? item.level === level : true)));\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <QuestionFilter callbackfilter={filter} ></QuestionFilter>\r\n            <section className=\"cards\">\r\n                {isLoading && <Loader />}\r\n                {questions && questions.map((question) =>\r\n                    <Question key={question.id} question={question} />\r\n                )}\r\n            </section>\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default QuestionList;","import React from 'react';\r\nimport QuestionList from '../components/questionList/QuestionList';\r\n\r\nconst Home = ({ _questions }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <QuestionList _questions={_questions} />\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default Home;","import React from 'react';\r\n\r\nconst Github = () => {\r\n    return (\r\n        <React.Fragment>\r\n            Git Drives awareness to increase engagement regroup. Golden goose put your feelers out dog and pony show, nor it's not hard guys nor programmatically. Put your feelers out prethink, shelfware. Zeitgeist what the turn the ship exposing new ways to evolve our design language but helicopter view hit the ground running. Accountable talk.\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default Github;\r\n","import React from 'react';\r\n\r\nconst About = () => {\r\n    return (\r\n        <React.Fragment>\r\n            Drive awareness to increase engagement regroup. Golden goose put your feelers out dog and pony show, nor it's not hard guys nor programmatically. Put your feelers out prethink, shelfware. Zeitgeist what the turn the ship exposing new ways to evolve our design language but helicopter view hit the ground running. Accountable talk.\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default About;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport Home from '../pages/Home';\r\nimport Github from '../pages/Github';\r\nimport About from '../pages/About';\r\n\r\n\r\nconst Routes = () => (\r\n  <React.Fragment>\r\n    <Route exact path=\"/\" component={Home} />\r\n    <Route path=\"/home\" component={Home} />\r\n    <Route path=\"/about\" component={About} />\r\n    <Route path=\"/github\" component={Github} />\r\n  </React.Fragment>\r\n);\r\n\r\nexport default Routes;\r\n","import React, { useEffect } from 'react';\nimport './App.css';\n//import data from './data/data';\n//import Home from './pages/Home';\nimport Menu from './components/menu/Menu';\nimport Footer from './components/footer/Footer';\n//import Loader from './components/loader/Loader';\nimport Routes from './routes/Routes';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nconst customHistory = createBrowserHistory({ basename: '/' });\n\nfunction App() {\n\n  const [siteInfo, setSiteInfo] = React.useState({});\n\n  useEffect(() => {\n\n    let init = {\n      method: 'GET',\n      mode: 'cors',\n      cache: 'default',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    fetch('http://quizzertech.com/system/wp-json', init)\n      .then(response => response.json())\n      .then(data => {\n        setSiteInfo({ title: data.name, description: data.description })\n      })\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Router history={customHistory}>\n        <div><Menu></Menu></div>\n        <div className=\"login-status\">=D</div>\n        <header className=\"App-header\">\n          <h1>{siteInfo.title ? siteInfo.title : ''}</h1>\n          <span>{siteInfo.description ? siteInfo.description : ''}</span>\n        </header>\n        <section className=\"container\">\n          <Routes />\n        </section>\n      </Router>\n      <footer>\n        <Footer />\n      </footer>\n    </div >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}